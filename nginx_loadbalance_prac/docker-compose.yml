version: '3'
services:
  mysql_master:
    image: mysql:${TAG}  
    container_name: "mysql_master"
    restart: always
    # ports:
    #   - ${MASTER_PORT}:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      backend:
        ipv4_address: 192.12.0.11

  mysql_slave:
    image: mysql:${TAG}
    container_name: "mysql_slave"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    # ports:
    #   - ${SLAVE_PORT}:3306
    depends_on:
      - mysql_master
    networks:
      backend:
        ipv4_address: 192.12.0.21

  goservice1:
    build: ./backend
    tty: true
    # ports:
    #   - "18086"  
    restart: unless-stopped
    networks:
      backend:
        ipv4_address: 192.12.0.3
  
  goservice2:
    build: ./backend
    tty: true
    # ports:
    #   - "18086"  
    restart: unless-stopped
    networks:
      backend:
        ipv4_address: 192.12.0.4
  
  loadbalancer:
    container_name: "nginx"
    build: ./load-balancer
    # restart: always
    tty: true
    depends_on:
      - mysql_master
      - mysql_slave
      - goservice1
    ports:
        - '8081:80'
    networks:
      backend:
        ipv4_address: 192.12.0.2

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 192.12.0.0/24